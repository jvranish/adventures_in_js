(function() {
  var LoggingConfig,
    __slice = [].slice;

  LoggingConfig = (function() {
    function LoggingConfig(_arg) {
      this.debug = _arg.debug, this.incomingMessages = _arg.incomingMessages, this.outgoingMessages = _arg.outgoingMessages, this.suppressTurnMessages = _arg.suppressTurnMessages, this.filters = _arg.filters, this.off = _arg.off;
      if (!this.off) {
        this.filters || (this.filters = []);
        this.filters.push((function(_this) {
          return function() {
            var args;
            args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
            return !(_this.suppressTurnMessages && args[0].match(/turn/i));
          };
        })(this));
      }
    }

    LoggingConfig.prototype.addFilter = function(filter) {
      if (this.off) {
        return;
      }
      return this.filters.push(filter);
    };

    LoggingConfig.prototype.allowMessage = function() {
      var args, f, _i, _len, _ref;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      if (this.off) {
        return false;
      }
      _ref = this.filters;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        f = _ref[_i];
        if (!f.apply(null, args)) {
          return false;
        }
      }
      return true;
    };

    return LoggingConfig;

  })();

  module.exports = LoggingConfig;

}).call(this);
